openapi: 3.0.3
info:
  title: API Documentation
  version: 1.0.0
  description: This page contains the documentation of RESTful APIs of the computational
    notebook search system.
paths:
  /api/:
    get:
      operationId: root_retrieve
      description: |-
        Return the welcome message to API connection.
        Args:
            request: Received request from the client.

        Returns:
            Response to the client.
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/context_search/:
    post:
      operationId: context_search_create
      description: |-
        Contexted based search

        It receives input as cell contents and return notebook search results.
        The whole functionality includes two parts: query generation and notebook search
        Args:
            request: Received request from the client.

        Returns:
            Response(results): context_based notebook search results
      tags:
      - context_search
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/create_userprofile/:
    post:
      operationId: create_userprofile_create
      description: |-
        Create a user profile.
        Args:
            request: Received request from the client.

        Returns:
            user's request.
      tags:
      - create_userprofile
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/initialize_app/:
    get:
      operationId: initialize_app_retrieve
      description: |-
        Initialize the application by creating superuser `admin`

        username: admin
        Email: admin@notebooksearch.com
        Password: notebooksearch2022
      tags:
      - initialize_app
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/notebook_download/:
    get:
      operationId: notebook_download_retrieve
      description: |-
        Download the notebook for client.

        Either retrieve from the database or download from Kaggle.

        Args:
            request: Received request from the client.

        Returns:
            Response(results): Notebook source file along with other meta info.
      tags:
      - notebook_download
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: notebook_download_create
      description: |-
        Download the notebook for client.

        Either retrieve from the database or download from Kaggle.

        Args:
            request: Received request from the client.

        Returns:
            Response(results): Notebook source file along with other meta info.
      tags:
      - notebook_download
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/notebook_search/:
    get:
      operationId: notebook_search_retrieve
      description: |-
        Return the notebook searching results to the client.
        Args:
            request: Received request from the client.

        Returns:
            Response(results): A list of notebook searching results.
      tags:
      - notebook_search
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: notebook_search_create
      description: |-
        Return the notebook searching results to the client.
        Args:
            request: Received request from the client.

        Returns:
            Response(results): A list of notebook searching results.
      tags:
      - notebook_search
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/obtain_api_token/:
    get:
      operationId: obtain_api_token_retrieve
      description: Show the token for user `aubergine` which will be used for token
        authentication of some APIs
      tags:
      - obtain_api_token
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/query_generation/:
    post:
      operationId: query_generation_create
      description: |-
        Generate queries for given cell contents
        Args:
            request: Received request from the client.

        Returns:
            Response(results): generated queries.
      tags:
      - query_generation
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/relevancy_feedback/:
    post:
      operationId: relevancy_feedback_create
      description: |-
        Store relevancy feedback from users
        Args:
            request: Received request from the client.

        Returns:
            Response(results): generated queries.
      tags:
      - relevancy_feedback
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/test/:
    get:
      operationId: test_retrieve
      description: |-
        Return the notebook searching results to the client.
        Args:
            request: Received request from the client.

        Returns:
            Response(results): A list of notebook searching results.
      tags:
      - test
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: test_create
      description: |-
        Return the notebook searching results to the client.
        Args:
            request: Received request from the client.

        Returns:
            Response(results): A list of notebook searching results.
      tags:
      - test
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
components:
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
