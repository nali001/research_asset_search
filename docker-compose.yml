# docker-compose.yml
# Build and run docker containers for web services in deployment environment

services:
  search_engine_app:
    build: ./search_engine_app
    image: mras/search_engine_app:latest
    container_name: mras_search_engine_app
    volumes: 
      - ./search_engine_app/notebooksearch/Notebooks:/search_engine_app/notebooksearch/Notebooks
    environment: 
      - ES_JAVA_OPTS=-Xms16g -Xmx16g
      - ELASTICSEARCH_HOSTNAME=elasticsearch
      - ELASTICSEARCH_PORT=9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=changeme
      - POSTGRES_HOSTNAME=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=notebooksearch2022
      - POSTGRES_DB=notebooksearch
    networks: 
      - search_engine_net
    depends_on:
      - elasticsearch
      - postgres
    ports: 
      - 127.0.0.1:7777:7777
    
  elasticsearch: 
    build: ./elasticsearch
    image: mras/elasticsearch:latest
    container_name: mras_elasticsearch
    volumes: 
      - ./elasticsearch/data:/usr/share/elasticsearch/data
      - ./elasticsearch/logs:/usr/share/elasticsearch/logs
    networks: 
      - search_engine_net
    environment:
      - discovery.type=single-node
      - cluster.name=es_dataserver
      - node.name=es01
      - TAKE_FILE_OWNERSHIP=true 
    ports: 
      - 127.0.0.1:9200:9200

  postgres:
    build: ./postgres
    image: mras/postgres:latest
    container_name: mras_postgres
    volumes: 
      - ./postgres/data:/var/lib/postgresql/data
      - ./postgres/logs:/var/lib/postgresql/logs
    networks: 
      - search_engine_net
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=notebooksearch2022
      - POSTGRES_DB=notebooksearch
    ports:
      - 127.0.0.1:5432:5432

  pgadmin:
    build: ./pgadmin
    image: mras/pgadmin:latest
    container_name: mras_pgadmin
    restart: always
    volumes:
      - ./pgadmin/data:/var/lib/pgadmin
    networks: 
      - search_engine_net
    environment:
      - PGADMIN_DEFAULT_EMAIL=postgres@notebooksearch.com
      - PGADMIN_DEFAULT_PASSWORD=notebooksearch2022
    depends_on: 
      - postgres
    ports:
      - 127.0.0.1:5050:80
  

  nginx: 
    build: ./nginx
    image: mras/nginx:latest
    container_name: mras_nginx
    volumes: 
      - ./nginx/logs:/nginx_server/search_engine_app/logs
      - ./nginx/templates:/etc/nginx/templates
      - ./nginx/static:/nginx_server/search_engine_app/static

    networks: 
      - search_engine_net
    depends_on:
      - search_engine_app
    ports: 
      - 127.0.0.1:8585:80


  haproxy:
    image: haproxy:2.8
    container_name: mras_haproxy
    depends_on:
      certbot_self_signed:
        condition: service_completed_successfully
    healthcheck:
      test: |
        bash -c 'exec 3<>/dev/tcp/127.0.0.1/80; echo -e "GET /health HTTP/1.1\nConnection: close\n" >&3; cat <&3 | grep -q "200 OK"'
      interval: 5s
    volumes:
      - ./gateway_config/conf-haproxy:/usr/local/etc/haproxy/
      - ./gateway_config/data-backend-certs/:/etc/ssl/backend-certs/
      - ./gateway_config/data-certificates:/etc/ssl/private/
    ports:
      - '80:80'
      - '443:443'
    networks: 
      - search_engine_net



  certbot_self_signed:
    image: local/certbot_self_signed
    container_name: mras_certbot_self_signed
    build:
      context: ./gateway_config/docker/certbot_self_signed
    volumes:
      - ./gateway_config/data-certificates:/etc/ssl/private/
    env_file:
      - ./gateway_config/certbot.env
    networks: 
      - search_engine_net
    

  certbot_letsencrypt:
    image: local/certbot_letsencrypt
    container_name: mras_certbot_letsencrypt
    build:
      context: ./gateway_config/docker/certbot_letsencrypt/
    depends_on:
      haproxy:
        condition: service_healthy
    volumes:
      - ./gateway_config/data-letsencrypt:/etc/letsencrypt/
      - ./gateway_config/data-certificates:/etc/ssl/private/
    env_file:
      - ./gateway_config/certbot.env
    networks: 
      - search_engine_net
    extra_hosts:
      - "host.docker.internal:host-gateway"


networks: 
  search_engine_net:
    driver: bridge

volumes:
  data-letsencrypt:
  data-certificates:
